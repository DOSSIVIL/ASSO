# Port de l'application
server.port=9090

 # Nom de l'application
spring.application.name=paiement

# Configuration de la base de donnees
spring.datasource.url=jdbc:postgresql://localhost:5432/gestionpaiementsasso
spring.datasource.username=sonia
spring.datasource.password=caramelpsql2

# Configuration des logs
logging.level.org.springframework.web=DEBUG
logging.level.com.ecommerce=DEBUG

# Configuration Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

external.produitservice.url=http://produit-micros:8080/produitService/removeQuantity/
external.utilisateurservice.url=http://microservice_fournisseur:9091/Utilisateurs/
external.commandeservice1.url=http://microservice_commande:8081/commande/2/
external.commandeservice2.url=http://microservice_commande:8081/commande/panier/
external.livraisonservice.url=http://django_backend:8000/Livraisonservices/fetch-payments/

# Configuration JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

# Configuration Swagger
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Configuration Resilience4j Retry pour paymentService
resilience4j.retry.instances.paymentService.maxAttempts=3
resilience4j.retry.instances.paymentService.waitDuration=2s

# Configuration Resilience4j RateLimiter pour paymentService
resilience4j.ratelimiter.instances.paymentService.limitForPeriod=10
resilience4j.ratelimiter.instances.paymentService.limitRefreshPeriod=8

# Configuration Resilience4j Timeout pour paymentService
resilience4j.timelimiter.instances.paymentService.timeoutDuration=6s
